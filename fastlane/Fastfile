default_platform :ios

platform :ios do

  before_all do
    # Always check for a fastlane update
    update_fastlane

    # This is the minimum version number required.
    fastlane_version "1.37.0"

    # Make sure the repo is in a clean state
    ensure_git_status_clean
  end

  desc "Setup the workspace for development"
  desc "Should be ran by all developers before starting any development"
  lane :setup do
    carthage(platform: "iOS")
  end

  desc "Build and create Screenshots"
  desc "This action does the following:"
  desc ""
  desc "- Invoke the Snapfile to create all the screenshots"
  lane :screenshots do
    snapshot
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This action does the following:"
  desc ""
  desc "- Increment the build number"
  desc "- Build the app in 'Release' configuration"
  desc "- Check all mobile provisioning"
  desc "- Upload to TestFlight (User needs to pull release trigger)"
  desc "- Commit the build number change, tag and push to git"
  lane :testflight do
    # Build
    increment_build_number
    gym(configuration: "Release")

    # Push
    sigh
    testflight(skip_submission: true)

    # Commit Build Number Change
    version = get_version_number(xcodeproj: "Bike Buddy.xcodeproj")
    build = get_build_number(xcodeproj: "Bike Buddy.xcodeproj")

    commit_version_bump(xcodeproj: "Bike Buddy.xcodeproj", message: "Version Bump to #{version}-#{build}")
    add_git_tag tag: "#{version}-#{build}"
    push_to_git_remote
  end

  #desc "Deploy a new version to the App Store"
  #desc "** Full Markdown** Support: `code`"
  #lane :deploy do
  #  sigh
  #  deliver(skip_deploy: true, force: true)
  #end

  # After Actions

  after_all do |lane|
    # Only called if successful
    notification(subtitle: "Fastlane Success!", message: "Finished driving #{lane} lane")
  end

  error do |lane, exception|
    # Reset the repo back to it's original state
    reset_git_repo

    notification(subtitle: "Fastlane Failure :(", message: "Error in driving #{lane} lane")
  end
end
